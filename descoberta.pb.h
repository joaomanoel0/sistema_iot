// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: descoberta.proto

#ifndef PROTOBUF_INCLUDED_descoberta_2eproto
#define PROTOBUF_INCLUDED_descoberta_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_descoberta_2eproto 

namespace protobuf_descoberta_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_descoberta_2eproto
class MensagemDescoberta;
class MensagemDescobertaDefaultTypeInternal;
extern MensagemDescobertaDefaultTypeInternal _MensagemDescoberta_default_instance_;
namespace google {
namespace protobuf {
template<> ::MensagemDescoberta* Arena::CreateMaybeMessage<::MensagemDescoberta>(Arena*);
}  // namespace protobuf
}  // namespace google

enum MensagemDescoberta_DeviceType {
  MensagemDescoberta_DeviceType_gatway = 0,
  MensagemDescoberta_DeviceType_temperatura = 1,
  MensagemDescoberta_DeviceType_umidade = 2,
  MensagemDescoberta_DeviceType_atuador = 3,
  MensagemDescoberta_DeviceType_MensagemDescoberta_DeviceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MensagemDescoberta_DeviceType_MensagemDescoberta_DeviceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MensagemDescoberta_DeviceType_IsValid(int value);
const MensagemDescoberta_DeviceType MensagemDescoberta_DeviceType_DeviceType_MIN = MensagemDescoberta_DeviceType_gatway;
const MensagemDescoberta_DeviceType MensagemDescoberta_DeviceType_DeviceType_MAX = MensagemDescoberta_DeviceType_atuador;
const int MensagemDescoberta_DeviceType_DeviceType_ARRAYSIZE = MensagemDescoberta_DeviceType_DeviceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MensagemDescoberta_DeviceType_descriptor();
inline const ::std::string& MensagemDescoberta_DeviceType_Name(MensagemDescoberta_DeviceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MensagemDescoberta_DeviceType_descriptor(), value);
}
inline bool MensagemDescoberta_DeviceType_Parse(
    const ::std::string& name, MensagemDescoberta_DeviceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MensagemDescoberta_DeviceType>(
    MensagemDescoberta_DeviceType_descriptor(), name, value);
}
// ===================================================================

class MensagemDescoberta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MensagemDescoberta) */ {
 public:
  MensagemDescoberta();
  virtual ~MensagemDescoberta();

  MensagemDescoberta(const MensagemDescoberta& from);

  inline MensagemDescoberta& operator=(const MensagemDescoberta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MensagemDescoberta(MensagemDescoberta&& from) noexcept
    : MensagemDescoberta() {
    *this = ::std::move(from);
  }

  inline MensagemDescoberta& operator=(MensagemDescoberta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MensagemDescoberta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MensagemDescoberta* internal_default_instance() {
    return reinterpret_cast<const MensagemDescoberta*>(
               &_MensagemDescoberta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MensagemDescoberta* other);
  friend void swap(MensagemDescoberta& a, MensagemDescoberta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MensagemDescoberta* New() const final {
    return CreateMaybeMessage<MensagemDescoberta>(NULL);
  }

  MensagemDescoberta* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MensagemDescoberta>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MensagemDescoberta& from);
  void MergeFrom(const MensagemDescoberta& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MensagemDescoberta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MensagemDescoberta_DeviceType DeviceType;
  static const DeviceType gatway =
    MensagemDescoberta_DeviceType_gatway;
  static const DeviceType temperatura =
    MensagemDescoberta_DeviceType_temperatura;
  static const DeviceType umidade =
    MensagemDescoberta_DeviceType_umidade;
  static const DeviceType atuador =
    MensagemDescoberta_DeviceType_atuador;
  static inline bool DeviceType_IsValid(int value) {
    return MensagemDescoberta_DeviceType_IsValid(value);
  }
  static const DeviceType DeviceType_MIN =
    MensagemDescoberta_DeviceType_DeviceType_MIN;
  static const DeviceType DeviceType_MAX =
    MensagemDescoberta_DeviceType_DeviceType_MAX;
  static const int DeviceType_ARRAYSIZE =
    MensagemDescoberta_DeviceType_DeviceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DeviceType_descriptor() {
    return MensagemDescoberta_DeviceType_descriptor();
  }
  static inline const ::std::string& DeviceType_Name(DeviceType value) {
    return MensagemDescoberta_DeviceType_Name(value);
  }
  static inline bool DeviceType_Parse(const ::std::string& name,
      DeviceType* value) {
    return MensagemDescoberta_DeviceType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string device_id = 2;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 2;
  const ::std::string& device_id() const;
  void set_device_id(const ::std::string& value);
  #if LANG_CXX11
  void set_device_id(::std::string&& value);
  #endif
  void set_device_id(const char* value);
  void set_device_id(const char* value, size_t size);
  ::std::string* mutable_device_id();
  ::std::string* release_device_id();
  void set_allocated_device_id(::std::string* device_id);

  // string ip_address = 4;
  void clear_ip_address();
  static const int kIpAddressFieldNumber = 4;
  const ::std::string& ip_address() const;
  void set_ip_address(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_address(::std::string&& value);
  #endif
  void set_ip_address(const char* value);
  void set_ip_address(const char* value, size_t size);
  ::std::string* mutable_ip_address();
  ::std::string* release_ip_address();
  void set_allocated_ip_address(::std::string* ip_address);

  // .MensagemDescoberta.DeviceType device_type = 3;
  void clear_device_type();
  static const int kDeviceTypeFieldNumber = 3;
  ::MensagemDescoberta_DeviceType device_type() const;
  void set_device_type(::MensagemDescoberta_DeviceType value);

  // int32 port = 5;
  void clear_port();
  static const int kPortFieldNumber = 5;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MensagemDescoberta)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr device_id_;
  ::google::protobuf::internal::ArenaStringPtr ip_address_;
  int device_type_;
  ::google::protobuf::int32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_descoberta_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MensagemDescoberta

// string device_id = 2;
inline void MensagemDescoberta::clear_device_id() {
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MensagemDescoberta::device_id() const {
  // @@protoc_insertion_point(field_get:MensagemDescoberta.device_id)
  return device_id_.GetNoArena();
}
inline void MensagemDescoberta::set_device_id(const ::std::string& value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MensagemDescoberta.device_id)
}
#if LANG_CXX11
inline void MensagemDescoberta::set_device_id(::std::string&& value) {
  
  device_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MensagemDescoberta.device_id)
}
#endif
inline void MensagemDescoberta::set_device_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MensagemDescoberta.device_id)
}
inline void MensagemDescoberta::set_device_id(const char* value, size_t size) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MensagemDescoberta.device_id)
}
inline ::std::string* MensagemDescoberta::mutable_device_id() {
  
  // @@protoc_insertion_point(field_mutable:MensagemDescoberta.device_id)
  return device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MensagemDescoberta::release_device_id() {
  // @@protoc_insertion_point(field_release:MensagemDescoberta.device_id)
  
  return device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MensagemDescoberta::set_allocated_device_id(::std::string* device_id) {
  if (device_id != NULL) {
    
  } else {
    
  }
  device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_id);
  // @@protoc_insertion_point(field_set_allocated:MensagemDescoberta.device_id)
}

// .MensagemDescoberta.DeviceType device_type = 3;
inline void MensagemDescoberta::clear_device_type() {
  device_type_ = 0;
}
inline ::MensagemDescoberta_DeviceType MensagemDescoberta::device_type() const {
  // @@protoc_insertion_point(field_get:MensagemDescoberta.device_type)
  return static_cast< ::MensagemDescoberta_DeviceType >(device_type_);
}
inline void MensagemDescoberta::set_device_type(::MensagemDescoberta_DeviceType value) {
  
  device_type_ = value;
  // @@protoc_insertion_point(field_set:MensagemDescoberta.device_type)
}

// string ip_address = 4;
inline void MensagemDescoberta::clear_ip_address() {
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MensagemDescoberta::ip_address() const {
  // @@protoc_insertion_point(field_get:MensagemDescoberta.ip_address)
  return ip_address_.GetNoArena();
}
inline void MensagemDescoberta::set_ip_address(const ::std::string& value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MensagemDescoberta.ip_address)
}
#if LANG_CXX11
inline void MensagemDescoberta::set_ip_address(::std::string&& value) {
  
  ip_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MensagemDescoberta.ip_address)
}
#endif
inline void MensagemDescoberta::set_ip_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MensagemDescoberta.ip_address)
}
inline void MensagemDescoberta::set_ip_address(const char* value, size_t size) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MensagemDescoberta.ip_address)
}
inline ::std::string* MensagemDescoberta::mutable_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:MensagemDescoberta.ip_address)
  return ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MensagemDescoberta::release_ip_address() {
  // @@protoc_insertion_point(field_release:MensagemDescoberta.ip_address)
  
  return ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MensagemDescoberta::set_allocated_ip_address(::std::string* ip_address) {
  if (ip_address != NULL) {
    
  } else {
    
  }
  ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_address);
  // @@protoc_insertion_point(field_set_allocated:MensagemDescoberta.ip_address)
}

// int32 port = 5;
inline void MensagemDescoberta::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 MensagemDescoberta::port() const {
  // @@protoc_insertion_point(field_get:MensagemDescoberta.port)
  return port_;
}
inline void MensagemDescoberta::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:MensagemDescoberta.port)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MensagemDescoberta_DeviceType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MensagemDescoberta_DeviceType>() {
  return ::MensagemDescoberta_DeviceType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_descoberta_2eproto
