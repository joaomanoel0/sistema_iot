/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_PROTOBUF_MESSAGES_PB_H_INCLUDED
#define PB_PROTOBUF_MESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Discovery {
    pb_callback_t message;
} Discovery;

typedef struct _Identification {
    pb_callback_t device_type;
    pb_callback_t device_ip;
    int32_t device_port;
    pb_callback_t protocol;
} Identification;

typedef struct _Confirmation {
    pb_callback_t message;
} Confirmation;

typedef struct _GatewayToDeviceMessage {
    pb_callback_t command;
} GatewayToDeviceMessage;

typedef struct _DeviceToGatewayMessage {
    pb_callback_t response;
} DeviceToGatewayMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Discovery_init_default                   {{{NULL}, NULL}}
#define Identification_init_default              {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define Confirmation_init_default                {{{NULL}, NULL}}
#define GatewayToDeviceMessage_init_default      {{{NULL}, NULL}}
#define DeviceToGatewayMessage_init_default      {{{NULL}, NULL}}
#define Discovery_init_zero                      {{{NULL}, NULL}}
#define Identification_init_zero                 {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define Confirmation_init_zero                   {{{NULL}, NULL}}
#define GatewayToDeviceMessage_init_zero         {{{NULL}, NULL}}
#define DeviceToGatewayMessage_init_zero         {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define Discovery_message_tag                    1
#define Identification_device_type_tag           1
#define Identification_device_ip_tag             2
#define Identification_device_port_tag           3
#define Identification_protocol_tag              4
#define Confirmation_message_tag                 1
#define GatewayToDeviceMessage_command_tag       1
#define DeviceToGatewayMessage_response_tag      1

/* Struct field encoding specification for nanopb */
#define Discovery_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   message,           1)
#define Discovery_CALLBACK pb_default_field_callback
#define Discovery_DEFAULT NULL

#define Identification_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   device_type,       1) \
X(a, CALLBACK, SINGULAR, STRING,   device_ip,         2) \
X(a, STATIC,   SINGULAR, INT32,    device_port,       3) \
X(a, CALLBACK, SINGULAR, STRING,   protocol,          4)
#define Identification_CALLBACK pb_default_field_callback
#define Identification_DEFAULT NULL

#define Confirmation_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   message,           1)
#define Confirmation_CALLBACK pb_default_field_callback
#define Confirmation_DEFAULT NULL

#define GatewayToDeviceMessage_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   command,           1)
#define GatewayToDeviceMessage_CALLBACK pb_default_field_callback
#define GatewayToDeviceMessage_DEFAULT NULL

#define DeviceToGatewayMessage_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   response,          1)
#define DeviceToGatewayMessage_CALLBACK pb_default_field_callback
#define DeviceToGatewayMessage_DEFAULT NULL

extern const pb_msgdesc_t Discovery_msg;
extern const pb_msgdesc_t Identification_msg;
extern const pb_msgdesc_t Confirmation_msg;
extern const pb_msgdesc_t GatewayToDeviceMessage_msg;
extern const pb_msgdesc_t DeviceToGatewayMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Discovery_fields &Discovery_msg
#define Identification_fields &Identification_msg
#define Confirmation_fields &Confirmation_msg
#define GatewayToDeviceMessage_fields &GatewayToDeviceMessage_msg
#define DeviceToGatewayMessage_fields &DeviceToGatewayMessage_msg

/* Maximum encoded size of messages (where known) */
/* Discovery_size depends on runtime parameters */
/* Identification_size depends on runtime parameters */
/* Confirmation_size depends on runtime parameters */
/* GatewayToDeviceMessage_size depends on runtime parameters */
/* DeviceToGatewayMessage_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
